cmake_minimum_required(VERSION 3.11)
project(liz 
    VERSION 0.10.0
    DESCRIPTION "Liz is a data-oriented behavior tree library implemented in C."
    )

option(LIZ_INCLUDE_TESTS_IN_BUILD
    "Set this to OFF if you do not wish to automatically build or run unit tests as part of the default cmake --build"
    ON)

if(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)

    # specify the C++ standard
    set(CMAKE_C_STANDARD_REQUIRED True)
    set(CMAKE_C_STANDARD 11)
    set(CMAKE_CXX_EXTENSIONS OFF)

    set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

file(GLOB LIZ_SOURCES
    "src/c/liz/*.h"
    "src/c/liz/*.c"
)

include_directories("src/c")
add_library(${PROJECT_NAME} ${LIZ_SOURCES})


# specify the C++ standard
set(CMAKE_CXX_STANDARD_REQUIRED True)
set(CMAKE_CXX_STANDARD 11)

## UnitTest++ Lib
# overwrite install() command with a dummy macro that is a nop
macro (install)
endmacro ()

add_compile_definitions(UNITTEST_USE_CUSTOM_STREAMS)
add_subdirectory(external/unittest-cpp EXCLUDE_FROM_ALL)

# replace install macro by one which simply invokes the CMake
#install() function with the given arguments
macro (install)
  _install(${ARGV})
endmacro(install)

## build the test for liz
file(GLOB TEST_SRCS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} test/*.cpp test/*.h)
include_directories("src/c")
include_directories("external/unittest-cpp/UnitTest++")
source_group( "" FILES ${TEST_SRCS})
add_executable(liz-test ${TEST_SRCS})

target_link_libraries(liz-test 
	PUBLIC
    UnitTest++
    liz
	)

# run unit tests as post build step
add_custom_command(TARGET liz-test POST_BUILD COMMAND liz-test COMMENT "Running unit tests")

if(NOT ${LIZ_INCLUDE_TESTS_IN_BUILD})
    set_target_properties(liz-test PROPERTIES EXCLUDE_FROM_ALL 1)
endif()
